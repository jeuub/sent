{"version":3,"sources":["panels/Home/Home.tsx","GraphQL/Mutations.js","panels/Login/Login.tsx","GraphQL/Queries.js","panels/Greeting/Greeting.tsx","panels/Main/Main.tsx","App.js","index.js"],"names":["Home","id","go","fetchedUser","useEffect","localStorage","getItem","className","level","weight","style","marginBottom","first_name","last_name","before","photo_200","src","href","target","stretched","size","mode","onClick","clear","CREATE_USER","gql","SIGN_IN","HAS_ACCOUNT","NEW_NOTE","Login","useMutation","hasAccount","signIn","signUp","useState","authorized","setAuthorized","isAccountExisting","a","variables","vkid","data","console","log","login","username","setItem","registration","authorization","margin","MY_NOTE","Greeting","phrase","setPhrase","createNoteMutation","useQuery","loading","createNote","content","me","notes","length","type","placeholder","value","onChange","e","Main","page","setPage","filled","vertical","height","activeStory","tabbar","selected","text","activePanel","errorLink","onError","graphqlErrors","networkErrors","map","message","location","path","authLink","ApolloLink","operation","forward","token","setContext","headers","link","from","HttpLink","uri","client","ApolloClient","cache","InMemoryCache","fetchOptions","App","setActivePanel","setUser","popout","setPopout","bridge","send","user","subscribe","detail","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","routerUnsubscribe","ApolloProvider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7b3f76a2.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Panel,\r\n  Button,\r\n  Group,\r\n  Cell,\r\n  Avatar,\r\n  Title,\r\n  Link,\r\n} from \"@vkontakte/vkui\";\r\nimport \"./home.css\";\r\n\r\ninterface Props {\r\n  id: any;\r\n  go: any;\r\n  fetchedUser: any;\r\n}\r\n\r\nconst Home = ({ id, go, fetchedUser }: Props) => {\r\n  useEffect(() => {\r\n    localStorage.getItem(\"sent-token\") ? go(\"greeting\") : null;\r\n  }, []);\r\n  return (\r\n    <Panel id={id} className=\"home-panel\">\r\n      {fetchedUser && (\r\n        <Group className=\"home-panel__greeting\">\r\n          <Title level=\"1\" weight=\"semibold\" style={{ marginBottom: 16 }}>\r\n            <strong>\r\n              {fetchedUser.first_name} {fetchedUser.last_name}\r\n            </strong>\r\n            ,<br />\r\n            приветствуем тебя в приложении <span>SENT</span>.\r\n          </Title>\r\n          <Cell\r\n            before={\r\n              fetchedUser.photo_200 ? (\r\n                <Avatar src={fetchedUser.photo_200} />\r\n              ) : null\r\n            }\r\n          />\r\n        </Group>\r\n      )}\r\n\r\n      <Group className=\"home-panel__actions\">\r\n        <Link\r\n          href=\"http://pd-2021-2.std-1368.ist.mospolytech.ru/\"\r\n          target=\"_blank\"\r\n          className=\"home-panel__link\"\r\n        >\r\n          Узнать больше.\r\n        </Link>\r\n        <Button stretched size=\"l\" mode=\"secondary\" onClick={() => go(\"login\")}>\r\n          Настроить sent.\r\n        </Button>\r\n        <Button\r\n          stretched\r\n          size=\"l\"\r\n          mode=\"secondary\"\r\n          onClick={() => localStorage.clear()}\r\n        >\r\n          Удалить данные\r\n        </Button>\r\n      </Group>\r\n    </Panel>\r\n  );\r\n};\r\n\r\nHome.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  go: PropTypes.func.isRequired,\r\n  fetchedUser: PropTypes.shape({\r\n    photo_200: PropTypes.string,\r\n    first_name: PropTypes.string,\r\n    last_name: PropTypes.string,\r\n    city: PropTypes.shape({\r\n      title: PropTypes.string,\r\n    }),\r\n  }),\r\n};\r\n\r\nexport default Home;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const CREATE_USER = gql`\r\n  mutation signUp($username: String!, $vkid: String!) {\r\n    signUp(username: $username, vkid: $vkid)\r\n  }\r\n`;\r\n\r\nexport const SIGN_IN = gql`\r\n  mutation signIn($username: String!, $vkid: String!) {\r\n    signIn(username: $username, vkid: $vkid)\r\n  }\r\n`;\r\n\r\nexport const HAS_ACCOUNT = gql`\r\n  mutation hasAccount($vkid: String!) {\r\n    hasAccount(vkid: $vkid)\r\n  }\r\n`;\r\n\r\nexport const NEW_NOTE = gql`\r\n  mutation newNote($content: String!) {\r\n    newNote(content: $content) {\r\n      content\r\n      id\r\n      author {\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Panel, Spinner } from \"@vkontakte/vkui\";\r\n\r\nimport \"./login.css\";\r\nimport { CREATE_USER, SIGN_IN, HAS_ACCOUNT } from \"../../GraphQL/Mutations\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\ninterface Props {\r\n  id: any;\r\n  go: any;\r\n  fetchedUser: any;\r\n}\r\n\r\nconst Login = ({ id, go, fetchedUser }: Props) => {\r\n  const [hasAccount] = useMutation(HAS_ACCOUNT);\r\n  const [signIn] = useMutation(SIGN_IN);\r\n  const [signUp] = useMutation(CREATE_USER);\r\n  const [authorized, setAuthorized] = useState(false);\r\n\r\n  const isAccountExisting = async () => {\r\n    try {\r\n      const data = await hasAccount({\r\n        variables: {\r\n          vkid: `${fetchedUser.id}`,\r\n        },\r\n      });\r\n      return data.data?.hasAccount;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const login = async () => {\r\n    try {\r\n      const data = await signIn({\r\n        variables: {\r\n          username: `${fetchedUser.first_name} ${fetchedUser.last_name}`,\r\n          vkid: `${fetchedUser.id}`,\r\n        },\r\n      });\r\n      localStorage.setItem(\"sent-token\", data.data?.signIn);\r\n      setAuthorized(true);\r\n      return data.data?.signIn;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const registration = async () => {\r\n    try {\r\n      const data = await signUp({\r\n        variables: {\r\n          username: `${fetchedUser.first_name} ${fetchedUser.last_name}`,\r\n          vkid: `${fetchedUser.id}`,\r\n        },\r\n      });\r\n      localStorage.setItem(\"sent-token\", data.data?.signIn);\r\n      setAuthorized(true);\r\n      return data.data?.signUp;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const authorization = async () => {\r\n    const exists = await isAccountExisting();\r\n    if (exists) {\r\n      login();\r\n    } else {\r\n      registration();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAuthorized(!!localStorage.getItem(\"sent-token\"));\r\n    authorization();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (authorized) {\r\n      go(\"greeting\");\r\n    }\r\n  }, [authorized]);\r\n\r\n  return (\r\n    <Panel id={id}>\r\n      <div className=\"login__spinner-wrapper\">\r\n        <Spinner size=\"large\" style={{ margin: \"20px 0\" }} />\r\n      </div>\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const FETCH_FEED = gql`\r\n  query Query {\r\n    noteFeed {\r\n      notes {\r\n        id\r\n        content\r\n        author {\r\n          username\r\n          id\r\n        }\r\n        createdAt\r\n        favoriteCount\r\n      }\r\n      cursor\r\n      hasNextPage\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MY_NOTE = gql`\r\n  query myNote {\r\n    me {\r\n      notes {\r\n        content\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { NEW_NOTE } from \"../../GraphQL/Mutations\";\r\nimport { MY_NOTE } from \"../../GraphQL/Queries\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport { Panel, Button, FormItem, Input } from \"@vkontakte/vkui\";\r\nimport { Icon24Add } from \"@vkontakte/icons\";\r\n\r\ninterface Props {\r\n  id: any;\r\n  go: any;\r\n  fetchedUser: any;\r\n}\r\nimport \"./Greeting.css\";\r\n\r\nconst Greeting = ({ id, fetchedUser, go }: Props) => {\r\n  const [phrase, setPhrase] = useState(\"\");\r\n  const [createNoteMutation] = useMutation(NEW_NOTE);\r\n  const { loading, data } = useQuery(MY_NOTE);\r\n\r\n  const createNote = async () => {\r\n    try {\r\n      await createNoteMutation({\r\n        variables: {\r\n          content: phrase,\r\n        },\r\n      });\r\n\r\n      go(\"main\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  if (data?.me?.notes.length) {\r\n    go(\"main\");\r\n  }\r\n  return (\r\n    <Panel id={id}>\r\n      {loading ? null : (\r\n        <div className=\"main__container\">\r\n          <div>\r\n            <h3 className=\"main__logo\">SENT.</h3>\r\n            <h2>\r\n              Одна фраза - на все,\r\n              <br /> навсегда.\r\n            </h2>\r\n          </div>\r\n          <div className=\"main__form form\">\r\n            <div className=\"form__content \">\r\n              <FormItem>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Your phrase\"\r\n                  value={phrase}\r\n                  onChange={(e) => setPhrase(e.target.value)}\r\n                />\r\n              </FormItem>\r\n              <Button\r\n                onClick={createNote}\r\n                before={<Icon24Add />}\r\n                size=\"m\"\r\n              ></Button>\r\n            </div>\r\n            <Button\r\n              mode=\"tertiary\"\r\n              size=\"m\"\r\n              className=\"form__later\"\r\n              stretched={true}\r\n              onClick={() => go(\"main\")}\r\n            >\r\n              {\" \"}\r\n              Создать фразу позже...\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport default Greeting;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Panel,\r\n  Spinner,\r\n  Tabbar,\r\n  TabbarItem,\r\n  Epic,\r\n  PanelHeader,\r\n  View,\r\n  Group,\r\n  FixedLayout,\r\n} from \"@vkontakte/vkui\";\r\nimport {\r\n  Icon28NewsfeedOutline,\r\n  Icon28UserCircleOutline,\r\n  Icon28MessageOutline,\r\n} from \"@vkontakte/icons\";\r\nconst Main = () => {\r\n  const [page, setPage] = useState(\"one\");\r\n\r\n  return (\r\n    <Panel>\r\n      <FixedLayout filled vertical=\"bottom\">\r\n        <Epic\r\n          style={{ height: \"100%\" }}\r\n          activeStory={page}\r\n          tabbar={\r\n            <Tabbar>\r\n              <TabbarItem\r\n                selected={page === \"one\"}\r\n                onClick={() => setPage(\"one\")}\r\n                text=\"Новости\"\r\n              >\r\n                <Icon28NewsfeedOutline />\r\n              </TabbarItem>\r\n              <TabbarItem\r\n                selected={page === \"two\"}\r\n                onClick={() => setPage(\"two\")}\r\n                text=\"Профиль\"\r\n              >\r\n                <Icon28UserCircleOutline />\r\n              </TabbarItem>\r\n              <TabbarItem\r\n                selected={page === \"three\"}\r\n                onClick={() => setPage(\"three\")}\r\n                text=\"Мессенджер\"\r\n              >\r\n                <Icon28MessageOutline />\r\n              </TabbarItem>\r\n            </Tabbar>\r\n          }\r\n        >\r\n          <View id=\"one\" activePanel=\"one\">\r\n            <Panel id=\"one\">\r\n              <Group style={{ height: \"450px\" }}>asdasdasd</Group>\r\n            </Panel>\r\n          </View>\r\n          <View id=\"two\" activePanel=\"two\">\r\n            <Panel id=\"two\">\r\n              <Group style={{ height: \"450px\" }}>asdasdываываывasd</Group>\r\n            </Panel>\r\n          </View>\r\n          <View id=\"three\" activePanel=\"three\">\r\n            <Panel id=\"three\">\r\n              <Group style={{ height: \"450px\" }}>123123</Group>\r\n            </Panel>\r\n          </View>\r\n        </Epic>\r\n      </FixedLayout>\r\n    </Panel>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport {\r\n  View,\r\n  ScreenSpinner,\r\n  AdaptivityProvider,\r\n  AppRoot,\r\n} from \"@vkontakte/vkui\";\r\nimport \"@vkontakte/vkui/dist/vkui.css\";\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  HttpLink,\r\n  ApolloLink,\r\n  from,\r\n} from \"@apollo/client\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\n\r\nimport Home from \"./panels/Home/Home\";\r\nimport Login from \"./panels/Login/Login\";\r\nimport Greeting from \"./panels/Greeting/Greeting\";\r\nimport Main from \"./panels/Main/Main\";\r\n\r\nconst errorLink = onError(({ graphqlErrors, networkErrors }) => {\r\n  if (graphqlErrors) {\r\n    graphqlErrors.map(({ message, location, path }) => {\r\n      console.log(`GraphQL error: ${message}`);\r\n    });\r\n  }\r\n});\r\n\r\nconst authLink = new ApolloLink((operation, forward) => {\r\n  const token = localStorage.getItem(\"sent-token\");\r\n  operation.setContext(({ headers = {} }) => ({\r\n    headers: {\r\n      ...headers,\r\n      authorization: token || null,\r\n    },\r\n  }));\r\n  return forward(operation);\r\n});\r\n\r\nconst link = from([\r\n  authLink,\r\n  errorLink,\r\n  new HttpLink({ uri: \"https://sent-server.herokuapp.com/api\" }),\r\n]);\r\n\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link: link,\r\n  fetchOptions: {\r\n    mode: \"no-cors\",\r\n  },\r\n});\r\n\r\nconst App = () => {\r\n  const [activePanel, setActivePanel] = useState(\"home\");\r\n  const [fetchedUser, setUser] = useState(null);\r\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\r\n\r\n  useEffect(() => {\r\n    bridge.subscribe(({ detail: { type, data } }) => {\r\n      if (type === \"VKWebAppUpdateConfig\") {\r\n        const schemeAttribute = document.createAttribute(\"scheme\");\r\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\r\n        document.body.attributes.setNamedItem(schemeAttribute);\r\n      }\r\n    });\r\n    async function fetchData() {\r\n      const user = await bridge.send(\"VKWebAppGetUserInfo\");\r\n      setUser(user);\r\n      setPopout(null);\r\n    }\r\n    fetchData();\r\n\r\n    return () => {\r\n      routerUnsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const go = (target) => {\r\n    setActivePanel(target);\r\n  };\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <AdaptivityProvider>\r\n        <AppRoot>\r\n          <View activePanel={activePanel} popout={popout}>\r\n            <Home id=\"home\" fetchedUser={fetchedUser} go={go} />\r\n            <Login id=\"login\" fetchedUser={fetchedUser} go={go} />\r\n            <Greeting id=\"greeting\" fetchedUser={fetchedUser} go={go} />\r\n            <Main id=\"main\" fetchedUser={fetchedUser} go={go} />\r\n          </View>\r\n        </AppRoot>\r\n      </AdaptivityProvider>\r\n    </ApolloProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nif (process.env.NODE_ENV === \"development\") {\r\n  /* eslint-disable */\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n"],"sourceRoot":""}